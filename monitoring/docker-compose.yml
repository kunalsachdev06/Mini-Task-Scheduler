# Task Scheduler Production Monitoring and Alerting System
# Comprehensive monitoring, health checks, and automated incident response

version: '3.8'

services:
  # Main application monitoring
  app-monitor:
    image: prom/prometheus:latest
    container_name: taskscheduler-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=90d'
      - '--web.enable-lifecycle'

  # Metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: taskscheduler-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secure_admin_password
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources

  # Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: taskscheduler-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml

  # Log shipping
  promtail:
    image: grafana/promtail:latest
    container_name: taskscheduler-promtail
    restart: unless-stopped
    volumes:
      - /var/log/taskscheduler:/var/log/taskscheduler:ro
      - /opt/taskscheduler/logs:/opt/taskscheduler/logs:ro
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml

  # Alert manager
  alertmanager:
    image: prom/alertmanager:latest
    container_name: taskscheduler-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'

  # Uptime monitoring
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: taskscheduler-uptime
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - uptime-data:/app/data

volumes:
  prometheus-data:
  grafana-data:
  loki-data:
  alertmanager-data:
  uptime-data:

networks:
  default:
    name: taskscheduler-monitoring