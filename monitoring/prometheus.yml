# Prometheus Configuration for Task Scheduler Monitoring

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'taskscheduler-production'
    environment: 'production'

# Rules for alerting
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Alert manager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Task Scheduler Application
  - job_name: 'taskscheduler-app'
    static_configs:
      - targets: ['host.docker.internal:8080']
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s

  # System metrics (node_exporter)
  - job_name: 'system'
    static_configs:
      - targets: ['host.docker.internal:9100']
    scrape_interval: 30s

  # Database metrics
  - job_name: 'sqlite-exporter'
    static_configs:
      - targets: ['host.docker.internal:9101']
    scrape_interval: 60s

  # Nginx metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['host.docker.internal:9113']
    scrape_interval: 30s

  # SSL certificate monitoring
  - job_name: 'ssl-exporter'
    static_configs:
      - targets: ['host.docker.internal:9219']
    scrape_interval: 3600s

  # Blackbox exporter for endpoint monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://yourdomain.com
        - https://yourdomain.com/api/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: host.docker.internal:9115

# Remote write for long-term storage (optional)
# remote_write:
#   - url: "https://prometheus-us-central1.grafana.net/api/prom/push"
#     basic_auth:
#       username: "your-grafana-cloud-username"
#       password: "your-grafana-cloud-api-key"